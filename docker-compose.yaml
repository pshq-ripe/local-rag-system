services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant-vectordb
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
    healthcheck:
      test: ["CMD-SHELL", "timeout 10 bash -c ':> /dev/tcp/127.0.0.1/6333' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped
    networks:
      - rag-network

  langchain-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: langchain-rag-server
    ports:
      - "8000:8000"
    environment:
      - QDRANT_URL=http://qdrant:6333
      - COLLECTION_NAME=devops_docs
      - LM_STUDIO_URL=http://host.docker.internal:1234/v1
      - EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
      - CHUNK_SIZE=1000
      - CHUNK_OVERLAP=200
      - TEMPERATURE=0.7
      - MAX_RETRIEVAL_RESULTS=3
      - LOG_LEVEL=INFO
      - PYTHONUNBUFFERED=1
    depends_on:
      qdrant:
        condition: service_healthy
    volumes:
      - ./documents:/app/documents:ro
      - ./logs:/app/logs
      - model_cache:/root/.cache/huggingface
    restart: unless-stopped
    networks:
      - rag-network

  vector-db-ui:
    image: ghcr.io/nomie/vector-db-manager:latest
    container_name: vector-db-manager
    ports:
      - "3000:3000"
    environment:
      - QDRANT_URL=http://qdrant:6333
    networks:
      - rag-network
    profiles:
      - debug

volumes:
  qdrant_storage:
  model_cache:

networks:
  rag-network:
    driver: bridge
